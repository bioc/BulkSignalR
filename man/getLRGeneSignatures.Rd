% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BSRInference-class.R,
%   R/BSRInferenceComp-class.R
\name{getLRGeneSignatures}
\alias{getLRGeneSignatures}
\alias{getLRGeneSignatures,BSRInference-method}
\alias{getLRGeneSignatures,BSRInferenceComp-method}
\title{Extract gene signatures of LR pair activity}
\usage{
\S4method{getLRGeneSignatures}{BSRInference}(
  obj,
  pval.thres = NULL,
  qval.thres = NULL,
  with.pw.id = FALSE
)

\S4method{getLRGeneSignatures}{BSRInferenceComp}(
  obj,
  pval.thres = NULL,
  qval.thres = NULL,
  with.pw.id = FALSE
)
}
\arguments{
\item{obj}{BSRInferenceComp object.}

\item{pval.thres}{P-value threshold.}

\item{qval.thres}{Q-value threshold.}

\item{with.pw.id}{A logical indicating whether the ID of a pathway
should be concatenated to its name.}
}
\value{
A BSRSignature object containing a gene signature for each triple
ligand-receptor pair. A reduction to the best pathway
for each pair is automatically performed and the gene signature is
comprised of the ligand, the receptor,
and all the target genes with rank equal or superior to \code{pairs$rank}.

A BSRSignatureComp object containing a gene signature for each triple
ligand-receptor pair. A reduction to the best pathway
for each pair is automatically performed and the gene signature is
comprised of the ligand, the receptor,
and all the target genes with rank equal or superior to \code{pairs$rank}.
}
\description{
Obtains gene signatures reflecting ligand-receptor as well as
receptor downstream activity to
score ligand-receptor pairs across samples subsequently with
\code{"\link[=BSRInference-class]{scoreLRGeneSignatures}"}

Obtains gene signatures reflecting ligand-receptor as well as
receptor downstream activity to
score ligand-receptor pairs across samples subsequently with
\code{"\link[=BSRInferenceComp-class]{scoreLRGeneSignatures}"}
}
\examples{
data(bsrinf, package = "BulkSignalR")

bsrinf.redP <- reduceToPathway(bsrinf)
bsrsig.redP <- getLRGeneSignatures(bsrinf, qval.thres = 0.001)

data(bsrdm, package = "BulkSignalR")
colA <- as.integer(1:2)
colB <- as.integer(3:4)

bsrdm.comp <- as(bsrdm, "BSRDataModelComp")

n <- nrow(ncounts(bsrdm.comp))
stats <- data.frame(pval = runif(n),
logFC = rnorm(n, 0, 2),
expr = runif(n, 0, 10))
rownames(stats) <- rownames(ncounts(bsrdm.comp))

bsrcc <- defineClusterComp(bsrdm.comp, colA, colB, stats)
bsrdm.comp <- addClusterComp(bsrdm.comp, bsrcc, "random.example")

subset <- c("REACTOME_BASIGIN_INTERACTIONS",
"REACTOME_SYNDECAN_INTERACTIONS",
"REACTOME_ECM_PROTEOGLYCANS",
"REACTOME_CELL_JUNCTION_ORGANIZATION")

BulkSignalR_Reactome <- BulkSignalR_Reactome[
BulkSignalR_Reactome$`Reactome name` \%in\% subset,]

bsrinf.comp <- initialInference(bsrdm.comp,
reference="REACTOME",
max.pval = 1, 
"random.example")
bsrinf.redP <- reduceToPathway(bsrinf.comp)
bsrsig.redP <- getLRGeneSignatures(bsrinf.redP, qval.thres = 0.001)
}
